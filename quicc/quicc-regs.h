#ifndef QUICC_REGS_H
#define QUICC_REGS_H

#include <bsp/utility.h>

#define QUICC_BASE 0xe0100000

typedef struct {
	uint32_t iadd;
#define QUICC_IRAM_IADD_AIE BSP_BBIT32(0)
#define QUICC_IRAM_IADD_ADDR(val) BSP_BFLD32(val, 16, 31)
#define QUICC_IRAM_IADD_ADDR_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_IRAM_IADD_ADDR_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t idata;
	uint32_t reserved_08;
	uint32_t iready;
#define QUICC_IRAM_IREADY_IREADY BSP_BBIT32(0)
} quicc_iram;

#define QUICC_IRAM (*(volatile quicc_iram *) (QUICC_BASE + 0x00))

typedef struct {
	uint32_t cicr;
#define QUICC_IRQ_CICR_HP(val) BSP_BFLD32(val, 2, 7)
#define QUICC_IRQ_CICR_HP_GET(reg) BSP_BFLD32GET(reg, 2, 7)
#define QUICC_IRQ_CICR_HP_SET(reg, val) BSP_BFLD32SET(reg, val, 2, 7)
#define QUICC_IRQ_CICR_GRTB BSP_BBIT32(9)
#define QUICC_IRQ_CICR_GRTA BSP_BBIT32(10)
#define QUICC_IRQ_CICR_GZCC BSP_BBIT32(12)
#define QUICC_IRQ_CICR_GWCC BSP_BBIT32(13)
#define QUICC_IRQ_CICR_GXCC BSP_BBIT32(14)
#define QUICC_IRQ_CICR_GYCC BSP_BBIT32(15)
#define QUICC_IRQ_CICR_HPIT(val) BSP_BFLD32(val, 22, 23)
#define QUICC_IRQ_CICR_HPIT_GET(reg) BSP_BFLD32GET(reg, 22, 23)
#define QUICC_IRQ_CICR_HPIT_SET(reg, val) BSP_BFLD32SET(reg, val, 22, 23)
	uint32_t civec;
#define QUICC_IRQ_RI_PTP1 BSP_BBIT32(0)
#define QUICC_IRQ_RI_PTP2 BSP_BBIT32(2)
#define QUICC_IRQ_RI_VT BSP_BBIT32(3)
#define QUICC_IRQ_RI_RTC BSP_BBIT32(4)
#define QUICC_IRQ_RI_EXT1 BSP_BBIT32(8)
#define QUICC_IRQ_RI_EXT2 BSP_BBIT32(9)
#define QUICC_IRQ_RI_EXT3 BSP_BBIT32(10)
#define QUICC_IRQ_RI_EXT4 BSP_BBIT32(11)
	uint32_t cripnr;
#define QUICC_IRQ_I_UCC1 BSP_BBIT32(0)
#define QUICC_IRQ_I_UCC2 BSP_BBIT32(1)
#define QUICC_IRQ_I_UCC3 BSP_BBIT32(2)
#define QUICC_IRQ_I_UCC4 BSP_BBIT32(3)
#define QUICC_IRQ_I_MCC1 BSP_BBIT32(4)
#define QUICC_IRQ_I_UCC5 BSP_BBIT32(8)
#define QUICC_IRQ_I_UCC6 BSP_BBIT32(9)
#define QUICC_IRQ_I_UCC7 BSP_BBIT32(10)
#define QUICC_IRQ_I_UCC8 BSP_BBIT32(11)
#define QUICC_IRQ_I_MCC2 BSP_BBIT32(12)
#define QUICC_IRQ_I_SPI2 BSP_BBIT32(16)
#define QUICC_IRQ_I_SPI1 BSP_BBIT32(17)
#define QUICC_IRQ_I_RTT BSP_BBIT32(18)
#define QUICC_IRQ_I_SDMA BSP_BBIT32(25)
#define QUICC_IRQ_I_USB1 BSP_BBIT32(26)
#define QUICC_IRQ_I_TIMER1 BSP_BBIT32(27)
#define QUICC_IRQ_I_TIMER2 BSP_BBIT32(28)
#define QUICC_IRQ_I_TIMER3 BSP_BBIT32(29)
#define QUICC_IRQ_I_TIMER4 BSP_BBIT32(30)
	uint32_t cipnr;
#define QUICC_IRQ_PRIO_1(val) BSP_BFLD32(val, 0, 2)
#define QUICC_IRQ_PRIO_1_GET(reg) BSP_BFLD32GET(reg, 0, 2)
#define QUICC_IRQ_PRIO_1_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 2)
#define QUICC_IRQ_PRIO_2(val) BSP_BFLD32(val, 3, 5)
#define QUICC_IRQ_PRIO_2_GET(reg) BSP_BFLD32GET(reg, 3, 5)
#define QUICC_IRQ_PRIO_2_SET(reg, val) BSP_BFLD32SET(reg, val, 3, 5)
#define QUICC_IRQ_PRIO_3(val) BSP_BFLD32(val, 6, 8)
#define QUICC_IRQ_PRIO_3_GET(reg) BSP_BFLD32GET(reg, 6, 8)
#define QUICC_IRQ_PRIO_3_SET(reg, val) BSP_BFLD32SET(reg, val, 6, 8)
#define QUICC_IRQ_PRIO_4(val) BSP_BFLD32(val, 9, 11)
#define QUICC_IRQ_PRIO_4_GET(reg) BSP_BFLD32GET(reg, 9, 11)
#define QUICC_IRQ_PRIO_4_SET(reg, val) BSP_BFLD32SET(reg, val, 9, 11)
#define QUICC_IRQ_PRIO_5(val) BSP_BFLD32(val, 16, 18)
#define QUICC_IRQ_PRIO_5_GET(reg) BSP_BFLD32GET(reg, 16, 18)
#define QUICC_IRQ_PRIO_5_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 18)
#define QUICC_IRQ_PRIO_6(val) BSP_BFLD32(val, 19, 21)
#define QUICC_IRQ_PRIO_6_GET(reg) BSP_BFLD32GET(reg, 19, 21)
#define QUICC_IRQ_PRIO_6_SET(reg, val) BSP_BFLD32SET(reg, val, 19, 21)
#define QUICC_IRQ_PRIO_7(val) BSP_BFLD32(val, 22, 24)
#define QUICC_IRQ_PRIO_7_GET(reg) BSP_BFLD32GET(reg, 22, 24)
#define QUICC_IRQ_PRIO_7_SET(reg, val) BSP_BFLD32SET(reg, val, 22, 24)
#define QUICC_IRQ_PRIO_8(val) BSP_BFLD32(val, 25, 27)
#define QUICC_IRQ_PRIO_8_GET(reg) BSP_BFLD32GET(reg, 25, 27)
#define QUICC_IRQ_PRIO_8_SET(reg, val) BSP_BFLD32SET(reg, val, 25, 27)
	uint32_t cipxcc;
	uint32_t cipycc;
	uint32_t cipwcc;
	uint32_t cipzcc;
	uint32_t cimr;
	uint32_t crimr;
	uint32_t cicnr;
#define QUICC_IRQ_CICNR_ZCC1T(val) BSP_BFLD32(val, 0, 1)
#define QUICC_IRQ_CICNR_ZCC1T_GET(reg) BSP_BFLD32GET(reg, 0, 1)
#define QUICC_IRQ_CICNR_ZCC1T_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 1)
#define QUICC_IRQ_CICNR_ZCC2T(val) BSP_BFLD32(val, 2, 3)
#define QUICC_IRQ_CICNR_ZCC2T_GET(reg) BSP_BFLD32GET(reg, 2, 3)
#define QUICC_IRQ_CICNR_ZCC2T_SET(reg, val) BSP_BFLD32SET(reg, val, 2, 3)
#define QUICC_IRQ_CICNR_WCC1T(val) BSP_BFLD32(val, 8, 9)
#define QUICC_IRQ_CICNR_WCC1T_GET(reg) BSP_BFLD32GET(reg, 8, 9)
#define QUICC_IRQ_CICNR_WCC1T_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 9)
#define QUICC_IRQ_CICNR_WCC2T(val) BSP_BFLD32(val, 10, 11)
#define QUICC_IRQ_CICNR_WCC2T_GET(reg) BSP_BFLD32GET(reg, 10, 11)
#define QUICC_IRQ_CICNR_WCC2T_SET(reg, val) BSP_BFLD32SET(reg, val, 10, 11)
#define QUICC_IRQ_CICNR_YCC1T(val) BSP_BFLD32(val, 16, 17)
#define QUICC_IRQ_CICNR_YCC1T_GET(reg) BSP_BFLD32GET(reg, 16, 17)
#define QUICC_IRQ_CICNR_YCC1T_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 17)
#define QUICC_IRQ_CICNR_YCC2T(val) BSP_BFLD32(val, 18, 19)
#define QUICC_IRQ_CICNR_YCC2T_GET(reg) BSP_BFLD32GET(reg, 18, 19)
#define QUICC_IRQ_CICNR_YCC2T_SET(reg, val) BSP_BFLD32SET(reg, val, 18, 19)
#define QUICC_IRQ_CICNR_XCC1T(val) BSP_BFLD32(val, 24, 25)
#define QUICC_IRQ_CICNR_XCC1T_GET(reg) BSP_BFLD32GET(reg, 24, 25)
#define QUICC_IRQ_CICNR_XCC1T_SET(reg, val) BSP_BFLD32SET(reg, val, 24, 25)
#define QUICC_IRQ_CICNR_XCC2T(val) BSP_BFLD32(val, 26, 27)
#define QUICC_IRQ_CICNR_XCC2T_GET(reg) BSP_BFLD32GET(reg, 26, 27)
#define QUICC_IRQ_CICNR_XCC2T_SET(reg, val) BSP_BFLD32SET(reg, val, 26, 27)
	uint32_t reserved_2c;
	uint32_t ciprta;
	uint32_t ciprtb;
	uint32_t reserved_38;
	uint32_t cricr;
#define QUICC_IRQ_CRICR_RTB1T(val) BSP_BFLD32(val, 0, 1)
#define QUICC_IRQ_CRICR_RTB1T_GET(reg) BSP_BFLD32GET(reg, 0, 1)
#define QUICC_IRQ_CRICR_RTB1T_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 1)
#define QUICC_IRQ_CRICR_RTB2T(val) BSP_BFLD32(val, 2, 3)
#define QUICC_IRQ_CRICR_RTB2T_GET(reg) BSP_BFLD32GET(reg, 2, 3)
#define QUICC_IRQ_CRICR_RTB2T_SET(reg, val) BSP_BFLD32SET(reg, val, 2, 3)
#define QUICC_IRQ_CRICR_RTA1T(val) BSP_BFLD32(val, 8, 9)
#define QUICC_IRQ_CRICR_RTA1T_GET(reg) BSP_BFLD32GET(reg, 8, 9)
#define QUICC_IRQ_CRICR_RTA1T_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 9)
#define QUICC_IRQ_CRICR_RTA2T(val) BSP_BFLD32(val, 10, 11)
#define QUICC_IRQ_CRICR_RTA2T_GET(reg) BSP_BFLD32GET(reg, 10, 11)
#define QUICC_IRQ_CRICR_RTA2T_SET(reg, val) BSP_BFLD32SET(reg, val, 10, 11)
	uint32_t reserved_40 [8];
	uint32_t chivec;
#define QUICC_IRQ_VEC(val) BSP_BFLD32(val, 26, 31)
#define QUICC_IRQ_VEC_GET(reg) BSP_BFLD32GET(reg, 26, 31)
#define QUICC_IRQ_VEC_SET(reg, val) BSP_BFLD32SET(reg, val, 26, 31)
} quicc_irq;

#define QUICC_IRQ (*(volatile quicc_irq *) (QUICC_BASE + 0x80))

typedef struct {
	uint32_t cecr;
#define QUICC_ENGINE_CECR_RST BSP_BBIT32(0)
#define QUICC_ENGINE_CECR_SBC(val) BSP_BFLD32(val, 6, 14)
#define QUICC_ENGINE_CECR_SBC_GET(reg) BSP_BFLD32GET(reg, 6, 14)
#define QUICC_ENGINE_CECR_SBC_SET(reg, val) BSP_BFLD32SET(reg, val, 6, 14)
#define QUICC_ENGINE_CECR_FLG BSP_BBIT32(15)
#define QUICC_ENGINE_CECR_DYN BSP_BBIT32(17)
#define QUICC_ENGINE_CECR_MCN(val) BSP_BFLD32(val, 18, 25)
#define QUICC_ENGINE_CECR_MCN_GET(reg) BSP_BFLD32GET(reg, 18, 25)
#define QUICC_ENGINE_CECR_MCN_SET(reg, val) BSP_BFLD32SET(reg, val, 18, 25)
#define QUICC_ENGINE_CECR_OPCODE(val) BSP_BFLD32(val, 26, 31)
#define QUICC_ENGINE_CECR_OPCODE_GET(reg) BSP_BFLD32GET(reg, 26, 31)
#define QUICC_ENGINE_CECR_OPCODE_SET(reg, val) BSP_BFLD32SET(reg, val, 26, 31)
	uint32_t ceccr;
#define QUICC_ENGINE_CECCR_TIME BSP_BBIT32(0)
#define QUICC_ENGINE_CECCR_TEC BSP_BBIT32(1)
#define QUICC_ENGINE_CECCR_TIMEP(val) BSP_BFLD32(val, 2, 7)
#define QUICC_ENGINE_CECCR_TIMEP_GET(reg) BSP_BFLD32GET(reg, 2, 7)
#define QUICC_ENGINE_CECCR_TIMEP_SET(reg, val) BSP_BFLD32SET(reg, val, 2, 7)
#define QUICC_ENGINE_CECCR_ERM1 BSP_BBIT32(8)
#define QUICC_ENGINE_CECCR_ERM2 BSP_BBIT32(9)
#define QUICC_ENGINE_CECCR_EDM1 BSP_BBIT32(20)
#define QUICC_ENGINE_CECCR_EDM2 BSP_BBIT32(21)
#define QUICC_ENGINE_CECCR_EDM3 BSP_BBIT32(22)
#define QUICC_ENGINE_CECCR_EDM4 BSP_BBIT32(23)
#define QUICC_ENGINE_CECCR_ERM3 BSP_BBIT32(24)
#define QUICC_ENGINE_CECCR_ERM4 BSP_BBIT32(25)
	uint32_t cecdr;
	uint16_t reserved_0c [5];
	uint16_t ceter;
	uint16_t reserved_18;
	uint16_t cetmr;
	uint32_t cetscr;
#define QUICC_ENGINE_CETSCR_EC1 BSP_BBIT32(0)
#define QUICC_ENGINE_CETSCR_RTE1 BSP_BBIT32(5)
#define QUICC_ENGINE_CETSCR_CETPS1(val) BSP_BFLD32(val, 6, 15)
#define QUICC_ENGINE_CETSCR_CETPS1_GET(reg) BSP_BFLD32GET(reg, 6, 15)
#define QUICC_ENGINE_CETSCR_CETPS1_SET(reg, val) BSP_BFLD32SET(reg, val, 6, 15)
#define QUICC_ENGINE_CETSCR_EC2 BSP_BBIT32(16)
#define QUICC_ENGINE_CETSCR_RTE2 BSP_BBIT32(21)
#define QUICC_ENGINE_CETSCR_CETPS2(val) BSP_BFLD32(val, 22, 31)
#define QUICC_ENGINE_CETSCR_CETPS2_GET(reg) BSP_BFLD32GET(reg, 22, 31)
#define QUICC_ENGINE_CETSCR_CETPS2_SET(reg, val) BSP_BFLD32SET(reg, val, 22, 31)
	uint32_t cetsr1;
	uint32_t cetsr2;
	uint32_t cesimr;
#define QUICC_ENGINE_CESIMR_UCC1 BSP_BBIT32(0)
#define QUICC_ENGINE_CESIMR_UCC2 BSP_BBIT32(1)
#define QUICC_ENGINE_CESIMR_UCC3 BSP_BBIT32(2)
#define QUICC_ENGINE_CESIMR_UCC4 BSP_BBIT32(3)
#define QUICC_ENGINE_CESIMR_UCC5 BSP_BBIT32(4)
#define QUICC_ENGINE_CESIMR_UCC6 BSP_BBIT32(5)
#define QUICC_ENGINE_CESIMR_UCC7 BSP_BBIT32(6)
#define QUICC_ENGINE_CESIMR_UCC8 BSP_BBIT32(7)
#define QUICC_ENGINE_CESIMR_PTP2 BSP_BBIT32(13)
#define QUICC_ENGINE_CESIMR_PTP1 BSP_BBIT32(14)
#define QUICC_ENGINE_CESIMR_RTC BSP_BBIT32(16)
#define QUICC_ENGINE_CESIMR_USB BSP_BBIT32(17)
#define QUICC_ENGINE_CESIMR_SPI1 BSP_BBIT32(18)
#define QUICC_ENGINE_CESIMR_SPI2 BSP_BBIT32(19)
#define QUICC_ENGINE_CESIMR_MCC1 BSP_BBIT32(20)
#define QUICC_ENGINE_CESIMR_MCC2 BSP_BBIT32(22)
	uint32_t reserved_2c;
	uint32_t cevter;
	uint32_t cevtmr;
	uint32_t cercr;
#define QUICC_ENGINE_CERCR_MEE BSP_BBIT32(0)
#define QUICC_ENGINE_CERCR_IEE BSP_BBIT32(1)
#define QUICC_ENGINE_CERCR_CIR BSP_BBIT32(4)
	uint32_t reserved_3c [9];
	uint16_t ceexe1;
	uint16_t reserved_62;
	uint16_t ceexm1;
	uint16_t reserved_66;
	uint16_t ceexe2;
	uint16_t reserved_6a;
	uint16_t ceexm2;
	uint16_t reserved_6e;
	uint16_t ceexe3;
	uint16_t reserved_72;
	uint16_t ceexm3;
	uint16_t reserved_76;
	uint16_t ceexe4;
	uint16_t reserved_7a;
	uint16_t ceexm4;
	uint16_t reserved_7e [29];
	uint32_t ceurnr;
	uint32_t ceiser;
	uint32_t ceismr;
} quicc_engine;

#define QUICC_ENGINE (*(volatile quicc_engine *) (QUICC_BASE + 0x100))

typedef struct {
	uint32_t cmxgcr;
#define QUICC_CMX_CMXGCR_TS1CLS(val) BSP_BFLD32(val, 1, 3)
#define QUICC_CMX_CMXGCR_TS1CLS_GET(reg) BSP_BFLD32GET(reg, 1, 3)
#define QUICC_CMX_CMXGCR_TS1CLS_SET(reg, val) BSP_BFLD32SET(reg, val, 1, 3)
#define QUICC_CMX_CMXGCR_TS2CLS(val) BSP_BFLD32(val, 5, 7)
#define QUICC_CMX_CMXGCR_TS2CLS_GET(reg) BSP_BFLD32GET(reg, 5, 7)
#define QUICC_CMX_CMXGCR_TS2CLS_SET(reg, val) BSP_BFLD32SET(reg, val, 5, 7)
#define QUICC_CMX_CMXGCR_CTCLS(val) BSP_BFLD32(val, 9, 11)
#define QUICC_CMX_CMXGCR_CTCLS_GET(reg) BSP_BFLD32GET(reg, 9, 11)
#define QUICC_CMX_CMXGCR_CTCLS_SET(reg, val) BSP_BFLD32SET(reg, val, 9, 11)
#define QUICC_CMX_CMXGCR_MEM(val) BSP_BFLD32(val, 17, 19)
#define QUICC_CMX_CMXGCR_MEM_GET(reg) BSP_BFLD32GET(reg, 17, 19)
#define QUICC_CMX_CMXGCR_MEM_SET(reg, val) BSP_BFLD32SET(reg, val, 17, 19)
#define QUICC_CMX_CMXGCR_RTC(val) BSP_BFLD32(val, 21, 23)
#define QUICC_CMX_CMXGCR_RTC_GET(reg) BSP_BFLD32GET(reg, 21, 23)
#define QUICC_CMX_CMXGCR_RTC_SET(reg, val) BSP_BFLD32SET(reg, val, 21, 23)
#define QUICC_CMX_CMXGCR_USBCS(val) BSP_BFLD32(val, 28, 31)
#define QUICC_CMX_CMXGCR_USBCS_GET(reg) BSP_BFLD32GET(reg, 28, 31)
#define QUICC_CMX_CMXGCR_USBCS_SET(reg, val) BSP_BFLD32SET(reg, val, 28, 31)
	uint32_t cmxsi1crl;
	uint32_t cmxsi1crh;
	uint32_t cmxsi1syr;
	uint32_t cmxucr [4];
	uint32_t cmxupcr;
	uint32_t reserved_24;
	uint32_t cmxsi2crl;
	uint32_t cmxsi2crh;
	uint32_t cmxsi2syr;
} quicc_cmx;

#define QUICC_CMX (*(volatile quicc_cmx *) (QUICC_BASE + 0x400))

typedef struct {
} quicc_timers;

#define QUICC_TIMERS (*(volatile quicc_timers *) (QUICC_BASE + 0x440))

typedef struct {
	uint32_t reserved_00 [8];
	uint32_t spmode;
#define QUICC_SPI_SPMODE_EM BSP_BBIT32(0)
#define QUICC_SPI_SPMODE_LOOP BSP_BBIT32(1)
#define QUICC_SPI_SPMODE_CI BSP_BBIT32(2)
#define QUICC_SPI_SPMODE_CP BSP_BBIT32(3)
#define QUICC_SPI_SPMODE_DIV16 BSP_BBIT32(4)
#define QUICC_SPI_SPMODE_REV BSP_BBIT32(5)
#define QUICC_SPI_SPMODE_MS BSP_BBIT32(6)
#define QUICC_SPI_SPMODE_EN BSP_BBIT32(7)
#define QUICC_SPI_SPMODE_LEN(val) BSP_BFLD32(val, 8, 11)
#define QUICC_SPI_SPMODE_LEN_GET(reg) BSP_BFLD32GET(reg, 8, 11)
#define QUICC_SPI_SPMODE_LEN_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 11)
#define QUICC_SPI_SPMODE_PM(val) BSP_BFLD32(val, 12, 15)
#define QUICC_SPI_SPMODE_PM_GET(reg) BSP_BFLD32GET(reg, 12, 15)
#define QUICC_SPI_SPMODE_PM_SET(reg, val) BSP_BFLD32SET(reg, val, 12, 15)
#define QUICC_SPI_SPMODE_OP BSP_BBIT32(17)
#define QUICC_SPI_SPMODE_MII BSP_BBIT32(18)
#define QUICC_SPI_SPMODE_CG(val) BSP_BFLD32(val, 20, 24)
#define QUICC_SPI_SPMODE_CG_GET(reg) BSP_BFLD32GET(reg, 20, 24)
#define QUICC_SPI_SPMODE_CG_SET(reg, val) BSP_BFLD32SET(reg, val, 20, 24)
	uint32_t spie;
#define QUICC_SPI_SPIE_MME BSP_BBIT32(18)
#define QUICC_SPI_SPIE_TXE BSP_BBIT32(19)
#define QUICC_SPI_SPIE_BSY BSP_BBIT32(21)
#define QUICC_SPI_SPIE_TXB BSP_BBIT32(22)
#define QUICC_SPI_SPIE_RXB BSP_BBIT32(23)
	uint32_t spim;
	uint16_t spcom;
#define QUICC_SPI_SPCOM_STR BSP_BBIT16(8)
	uint16_t reserved_2e;
	uint32_t spitd;
	uint32_t spird;
} quicc_spi;

#define QUICC_SPI_1 (*(volatile quicc_spi *) (QUICC_BASE + 0x4c0))
#define QUICC_SPI_2 (*(volatile quicc_spi *) (QUICC_BASE + 0x500))

typedef struct {
} quicc_mcc;

#define QUICC_MCC_1 (*(volatile quicc_mcc *) (QUICC_BASE + 0x540))
#define QUICC_MCC_2 (*(volatile quicc_mcc *) (QUICC_BASE + 0x580))

typedef struct {
	uint32_t brgc [16];
#define QUICC_BRG_BRGC_RST BSP_BBIT32(14)
#define QUICC_BRG_BRGC_EN BSP_BBIT32(15)
#define QUICC_BRG_BRGC_EXTC(val) BSP_BFLD32(val, 16, 17)
#define QUICC_BRG_BRGC_EXTC_GET(reg) BSP_BFLD32GET(reg, 16, 17)
#define QUICC_BRG_BRGC_EXTC_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 17)
#define QUICC_BRG_BRGC_ATB BSP_BBIT32(18)
#define QUICC_BRG_BRGC_CD(val) BSP_BFLD32(val, 19, 30)
#define QUICC_BRG_BRGC_CD_GET(reg) BSP_BFLD32GET(reg, 19, 30)
#define QUICC_BRG_BRGC_CD_SET(reg, val) BSP_BFLD32SET(reg, val, 19, 30)
#define QUICC_BRG_BRGC_DIV16 BSP_BBIT32(31)
} quicc_brg;

#define QUICC_BRG (*(volatile quicc_brg *) (QUICC_BASE + 0x640))

typedef struct {
} quicc_usb;

#define QUICC_USB (*(volatile quicc_usb *) (QUICC_BASE + 0x6c0))

typedef struct {
} quicc_si;

#define QUICC_SI_1 (*(volatile quicc_si *) (QUICC_BASE + 0x700))
#define QUICC_SI_2 (*(volatile quicc_si *) (QUICC_BASE + 0x780))

typedef struct {
} quicc_sirt;

#define QUICC_SIRT_1 (*(volatile quicc_sirt *) (QUICC_BASE + 0x1000))
#define QUICC_SIRT_2 (*(volatile quicc_sirt *) (QUICC_BASE + 0x1800))

typedef struct {
#define QUICC_BD_W BSP_BBIT32(2)
#define QUICC_BD_I BSP_BBIT32(3)
#define QUICC_BD_L BSP_BBIT32(4)
#define QUICC_BD_LENGTH(val) BSP_BFLD32(val, 16, 31)
#define QUICC_BD_LENGTH_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_BD_LENGTH_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
#define QUICC_BD_RX_E BSP_BBIT32(0)
#define QUICC_BD_RX_F BSP_BBIT32(5)
#define QUICC_BD_RX_PTP BSP_BBIT32(6)
#define QUICC_BD_RX_M BSP_BBIT32(7)
#define QUICC_BD_RX_BC BSP_BBIT32(8)
#define QUICC_BD_RX_MC BSP_BBIT32(9)
#define QUICC_BD_RX_LG BSP_BBIT32(10)
#define QUICC_BD_RX_NO BSP_BBIT32(11)
#define QUICC_BD_RX_SH BSP_BBIT32(12)
#define QUICC_BD_RX_CR BSP_BBIT32(13)
#define QUICC_BD_RX_OV BSP_BBIT32(14)
#define QUICC_BD_RX_IPCH BSP_BBIT32(15)
#define QUICC_BD_TX_R BSP_BBIT32(0)
#define QUICC_BD_TX_PAD_CRC BSP_BBIT32(1)
#define QUICC_BD_TX_TC BSP_BBIT32(5)
#define QUICC_BD_TX_DEF BSP_BBIT32(6)
#define QUICC_BD_TX_PP_EXDEF BSP_BBIT32(7)
#define QUICC_BD_TX_LC_PTP BSP_BBIT32(8)
#define QUICC_BD_TX_IPCH0_RL BSP_BBIT32(9)
#define QUICC_BD_TX_RC_VID(val) BSP_BFLD32(val, 10, 13)
#define QUICC_BD_TX_RC_VID_GET(reg) BSP_BFLD32GET(reg, 10, 13)
#define QUICC_BD_TX_RC_VID_SET(reg, val) BSP_BFLD32SET(reg, val, 10, 13)
#define QUICC_BD_TX_IPCHI1_UN BSP_BBIT32(14)
#define QUICC_BD_TX_IPCHI2_CSL BSP_BBIT32(15)
	uint32_t status;
	uint32_t buffer;
} quicc_bd;

typedef struct {
	uint32_t gumr_l;
#define QUICC_UCS_GUMR_L_TCI BSP_BBIT32(3)
#define QUICC_UCS_GUMR_L_RINV BSP_BBIT32(6)
#define QUICC_UCS_GUMR_L_TINV BSP_BBIT32(7)
#define QUICC_UCS_GUMR_L_TEND BSP_BBIT32(13)
#define QUICC_UCS_GUMR_L_TDCR(val) BSP_BFLD32(val, 14, 15)
#define QUICC_UCS_GUMR_L_TDCR_GET(reg) BSP_BFLD32GET(reg, 14, 15)
#define QUICC_UCS_GUMR_L_TDCR_SET(reg, val) BSP_BFLD32SET(reg, val, 14, 15)
#define QUICC_UCS_GUMR_L_RDCR(val) BSP_BFLD32(val, 16, 17)
#define QUICC_UCS_GUMR_L_RDCR_GET(reg) BSP_BFLD32GET(reg, 16, 17)
#define QUICC_UCS_GUMR_L_RDCR_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 17)
#define QUICC_UCS_GUMR_L_RENC(val) BSP_BFLD32(val, 18, 20)
#define QUICC_UCS_GUMR_L_RENC_GET(reg) BSP_BFLD32GET(reg, 18, 20)
#define QUICC_UCS_GUMR_L_RENC_SET(reg, val) BSP_BFLD32SET(reg, val, 18, 20)
#define QUICC_UCS_GUMR_L_TENC(val) BSP_BFLD32(val, 21, 23)
#define QUICC_UCS_GUMR_L_TENC_GET(reg) BSP_BFLD32GET(reg, 21, 23)
#define QUICC_UCS_GUMR_L_TENC_SET(reg, val) BSP_BFLD32SET(reg, val, 21, 23)
#define QUICC_UCS_GUMR_L_DIAG(val) BSP_BFLD32(val, 24, 25)
#define QUICC_UCS_GUMR_L_DIAG_GET(reg) BSP_BFLD32GET(reg, 24, 25)
#define QUICC_UCS_GUMR_L_DIAG_SET(reg, val) BSP_BFLD32SET(reg, val, 24, 25)
#define QUICC_UCS_GUMR_L_ENR BSP_BBIT32(26)
#define QUICC_UCS_GUMR_L_ENT BSP_BBIT32(27)
#define QUICC_UCS_GUMR_L_MODE(val) BSP_BFLD32(val, 28, 31)
#define QUICC_UCS_GUMR_L_MODE_GET(reg) BSP_BFLD32GET(reg, 28, 31)
#define QUICC_UCS_GUMR_L_MODE_SET(reg, val) BSP_BFLD32SET(reg, val, 28, 31)
	uint32_t gumr_h;
#define QUICC_UCS_GUMR_H_SAM BSP_BBIT32(16)
#define QUICC_UCS_GUMR_H_REVD BSP_BBIT32(18)
#define QUICC_UCS_GUMR_H_TRX_TTX(val) BSP_BFLD32(val, 19, 20)
#define QUICC_UCS_GUMR_H_TRX_TTX_GET(reg) BSP_BFLD32GET(reg, 19, 20)
#define QUICC_UCS_GUMR_H_TRX_TTX_SET(reg, val) BSP_BFLD32SET(reg, val, 19, 20)
#define QUICC_UCS_GUMR_H_CDP_CTSP(val) BSP_BFLD32(val, 21, 22)
#define QUICC_UCS_GUMR_H_CDP_CTSP_GET(reg) BSP_BFLD32GET(reg, 21, 22)
#define QUICC_UCS_GUMR_H_CDP_CTSP_SET(reg, val) BSP_BFLD32SET(reg, val, 21, 22)
#define QUICC_UCS_GUMR_H_CDS_CTSS(val) BSP_BFLD32(val, 23, 24)
#define QUICC_UCS_GUMR_H_CDS_CTSS_GET(reg) BSP_BFLD32GET(reg, 23, 24)
#define QUICC_UCS_GUMR_H_CDS_CTSS_SET(reg, val) BSP_BFLD32SET(reg, val, 23, 24)
#define QUICC_UCS_GUMR_H_TFL BSP_BBIT32(25)
#define QUICC_UCS_GUMR_H_RFW BSP_BBIT32(26)
#define QUICC_UCS_GUMR_H_TXSY BSP_BBIT32(27)
#define QUICC_UCS_GUMR_H_SYNL(val) BSP_BFLD32(val, 28, 29)
#define QUICC_UCS_GUMR_H_SYNL_GET(reg) BSP_BFLD32GET(reg, 28, 29)
#define QUICC_UCS_GUMR_H_SYNL_SET(reg, val) BSP_BFLD32SET(reg, val, 28, 29)
#define QUICC_UCS_GUMR_H_RTSM BSP_BBIT32(30)
#define QUICC_UCS_GUMR_H_RSYN BSP_BBIT32(31)
	uint32_t upsmr;
#define QUICC_UCS_UPSMR_UART_FLC BSP_BBIT32(0)
#define QUICC_UCS_UPSMR_UART_SL BSP_BBIT32(1)
#define QUICC_UCS_UPSMR_UART_CL(val) BSP_BFLD32(val, 2, 3)
#define QUICC_UCS_UPSMR_UART_CL_GET(reg) BSP_BFLD32GET(reg, 2, 3)
#define QUICC_UCS_UPSMR_UART_CL_SET(reg, val) BSP_BFLD32SET(reg, val, 2, 3)
#define QUICC_UCS_UPSMR_UART_UM(val) BSP_BFLD32(val, 4, 5)
#define QUICC_UCS_UPSMR_UART_UM_GET(reg) BSP_BFLD32GET(reg, 4, 5)
#define QUICC_UCS_UPSMR_UART_UM_SET(reg, val) BSP_BFLD32SET(reg, val, 4, 5)
#define QUICC_UCS_UPSMR_UART_FRZ BSP_BBIT32(6)
#define QUICC_UCS_UPSMR_UART_RZS BSP_BBIT32(7)
#define QUICC_UCS_UPSMR_UART_SYN BSP_BBIT32(8)
#define QUICC_UCS_UPSMR_UART_DRT BSP_BBIT32(9)
#define QUICC_UCS_UPSMR_UART_PEN BSP_BBIT32(11)
#define QUICC_UCS_UPSMR_UART_RPM(val) BSP_BFLD32(val, 12, 13)
#define QUICC_UCS_UPSMR_UART_RPM_GET(reg) BSP_BFLD32GET(reg, 12, 13)
#define QUICC_UCS_UPSMR_UART_RPM_SET(reg, val) BSP_BFLD32SET(reg, val, 12, 13)
#define QUICC_UCS_UPSMR_UART_TPM(val) BSP_BFLD32(val, 14, 15)
#define QUICC_UCS_UPSMR_UART_TPM_GET(reg) BSP_BFLD32GET(reg, 14, 15)
#define QUICC_UCS_UPSMR_UART_TPM_SET(reg, val) BSP_BFLD32SET(reg, val, 14, 15)
	uint32_t utodr_udsr;
#define QUICC_UCS_UTODR_UDSR_UDSR_TOD BSP_BBIT32(0)
#define QUICC_UCS_UTODR_UDSR_UDSR_SYN2(val) BSP_BFLD32(val, 15, 23)
#define QUICC_UCS_UTODR_UDSR_UDSR_SYN2_GET(reg) BSP_BFLD32GET(reg, 15, 23)
#define QUICC_UCS_UTODR_UDSR_UDSR_SYN2_SET(reg, val) BSP_BFLD32SET(reg, val, 15, 23)
#define QUICC_UCS_UTODR_UDSR_UDSR_SYN1(val) BSP_BFLD32(val, 24, 31)
#define QUICC_UCS_UTODR_UDSR_UDSR_SYN1_GET(reg) BSP_BFLD32GET(reg, 24, 31)
#define QUICC_UCS_UTODR_UDSR_UDSR_SYN1_SET(reg, val) BSP_BFLD32SET(reg, val, 24, 31)
	uint32_t ucce;
#define QUICC_UCS_UCCE_UART_AB BSP_BBIT32(6)
#define QUICC_UCS_UCCE_UART_IDL BSP_BBIT32(7)
#define QUICC_UCS_UCCE_UART_GRA BSP_BBIT32(8)
#define QUICC_UCS_UCCE_UART_BRKE BSP_BBIT32(9)
#define QUICC_UCS_UCCE_UART_BRKS BSP_BBIT32(10)
#define QUICC_UCS_UCCE_UART_CCR BSP_BBIT32(12)
#define QUICC_UCS_UCCE_UART_BSY BSP_BBIT32(13)
#define QUICC_UCS_UCCE_UART_TX BSP_BBIT32(14)
#define QUICC_UCS_UCCE_UART_RX BSP_BBIT32(15)
	uint32_t uccm_uccs;
#define QUICC_UCS_UCCS_UART_ID BSP_BBIT32(31)
} quicc_ucs;

typedef struct {
	uint32_t gumr;
#define QUICC_UCF_GUMR_DIAG(val) BSP_BFLD32(val, 0, 1)
#define QUICC_UCF_GUMR_DIAG_GET(reg) BSP_BFLD32GET(reg, 0, 1)
#define QUICC_UCF_GUMR_DIAG_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 1)
#define QUICC_UCF_GUMR_TCI BSP_BBIT32(2)
#define QUICC_UCF_GUMR_TRX BSP_BBIT32(3)
#define QUICC_UCF_GUMR_TTX BSP_BBIT32(4)
#define QUICC_UCF_GUMR_CDP BSP_BBIT32(5)
#define QUICC_UCF_GUMR_CTSP BSP_BBIT32(6)
#define QUICC_UCF_GUMR_CDS BSP_BBIT32(7)
#define QUICC_UCF_GUMR_CTSS BSP_BBIT32(8)
#define QUICC_UCF_GUMR_FFTH(val) BSP_BFLD32(val, 9, 10)
#define QUICC_UCF_GUMR_FFTH_GET(reg) BSP_BFLD32GET(reg, 9, 10)
#define QUICC_UCF_GUMR_FFTH_SET(reg, val) BSP_BFLD32SET(reg, val, 9, 10)
#define QUICC_UCF_GUMR_TXSY BSP_BBIT32(14)
#define QUICC_UCF_GUMR_RSYN BSP_BBIT32(15)
#define QUICC_UCF_GUMR_SYNL(val) BSP_BFLD32(val, 16, 17)
#define QUICC_UCF_GUMR_SYNL_GET(reg) BSP_BFLD32GET(reg, 16, 17)
#define QUICC_UCF_GUMR_SYNL_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 17)
#define QUICC_UCF_GUMR_RTSM BSP_BBIT32(18)
#define QUICC_UCF_GUMR_RENC(val) BSP_BFLD32(val, 19, 20)
#define QUICC_UCF_GUMR_RENC_GET(reg) BSP_BFLD32GET(reg, 19, 20)
#define QUICC_UCF_GUMR_RENC_SET(reg, val) BSP_BFLD32SET(reg, val, 19, 20)
#define QUICC_UCF_GUMR_REVD BSP_BBIT32(21)
#define QUICC_UCF_GUMR_TENC(val) BSP_BFLD32(val, 22, 23)
#define QUICC_UCF_GUMR_TENC_GET(reg) BSP_BFLD32GET(reg, 22, 23)
#define QUICC_UCF_GUMR_TENC_SET(reg, val) BSP_BFLD32SET(reg, val, 22, 23)
#define QUICC_UCF_GUMR_TCRC(val) BSP_BFLD32(val, 24, 25)
#define QUICC_UCF_GUMR_TCRC_GET(reg) BSP_BFLD32GET(reg, 24, 25)
#define QUICC_UCF_GUMR_TCRC_SET(reg, val) BSP_BFLD32SET(reg, val, 24, 25)
#define QUICC_UCF_GUMR_ENR BSP_BBIT32(26)
#define QUICC_UCF_GUMR_ENT BSP_BBIT32(27)
#define QUICC_UCF_GUMR_MODE(val) BSP_BFLD32(val, 28, 31)
#define QUICC_UCF_GUMR_MODE_GET(reg) BSP_BFLD32GET(reg, 28, 31)
#define QUICC_UCF_GUMR_MODE_SET(reg, val) BSP_BFLD32SET(reg, val, 28, 31)
	uint32_t upsmr;
#define QUICC_UCF_UPSMR_UEC_FTFE BSP_BBIT32(0)
#define QUICC_UCF_UPSMR_UEC_PTPE BSP_BBIT32(1)
#define QUICC_UCF_UPSMR_UEC_ECM BSP_BBIT32(5)
#define QUICC_UCF_UPSMR_UEC_HSE BSP_BBIT32(6)
#define QUICC_UCF_UPSMR_UEC_UPFE BSP_BBIT32(8)
#define QUICC_UCF_UPSMR_UEC_PRO BSP_BBIT32(9)
#define QUICC_UCF_UPSMR_UEC_RSH BSP_BBIT32(11)
#define QUICC_UCF_UPSMR_UEC_RPM BSP_BBIT32(12)
#define QUICC_UCF_UPSMR_UEC_R10M BSP_BBIT32(13)
#define QUICC_UCF_UPSMR_UEC_RLPB BSP_BBIT32(14)
#define QUICC_UCF_UPSMR_UEC_TBIM BSP_BBIT32(15)
#define QUICC_UCF_UPSMR_UEC_AUFC BSP_BBIT32(17)
#define QUICC_UCF_UPSMR_UEC_MUST_BE_ONE BSP_BBIT32(18)
#define QUICC_UCF_UPSMR_UEC_RMM BSP_BBIT32(19)
#define QUICC_UCF_UPSMR_UEC_MDCP BSP_BBIT32(20)
#define QUICC_UCF_UPSMR_UEC_BRO BSP_BBIT32(22)
#define QUICC_UCF_UPSMR_UEC_SMM BSP_BBIT32(24)
#define QUICC_UCF_UPSMR_UEC_SMAC BSP_BBIT32(25)
#define QUICC_UCF_UPSMR_UEC_SGMM BSP_BBIT32(26)
	uint32_t utodr;
#define QUICC_UCF_UTODR_TOD BSP_BBIT32(0)
	uint32_t udsr;
#define QUICC_UCF_UDSR_SYN2(val) BSP_BFLD32(val, 0, 7)
#define QUICC_UCF_UDSR_SYN2_GET(reg) BSP_BFLD32GET(reg, 0, 7)
#define QUICC_UCF_UDSR_SYN2_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 7)
#define QUICC_UCF_UDSR_SYN1(val) BSP_BFLD32(val, 8, 15)
#define QUICC_UCF_UDSR_SYN1_GET(reg) BSP_BFLD32GET(reg, 8, 15)
#define QUICC_UCF_UDSR_SYN1_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 15)
	uint32_t ucce;
#define QUICC_UCF_UCCE_UEC_MPD BSP_BBIT32(0)
#define QUICC_UCF_UCCE_UEC_SCAR BSP_BBIT32(1)
#define QUICC_UCF_UCCE_UEC_GRA BSP_BBIT32(2)
#define QUICC_UCF_UCCE_UEC_CBPR BSP_BBIT32(3)
#define QUICC_UCF_UCCE_UEC_BSY BSP_BBIT32(4)
#define QUICC_UCF_UCCE_UEC_RXC BSP_BBIT32(5)
#define QUICC_UCF_UCCE_UEC_TXC BSP_BBIT32(6)
#define QUICC_UCF_UCCE_UEC_TXE BSP_BBIT32(7)
#define QUICC_UCF_UCCE_UEC_TXB7 BSP_BBIT32(8)
#define QUICC_UCF_UCCE_UEC_TXB6 BSP_BBIT32(9)
#define QUICC_UCF_UCCE_UEC_TXB5 BSP_BBIT32(10)
#define QUICC_UCF_UCCE_UEC_TXB4 BSP_BBIT32(11)
#define QUICC_UCF_UCCE_UEC_TXB3 BSP_BBIT32(12)
#define QUICC_UCF_UCCE_UEC_TXB2 BSP_BBIT32(13)
#define QUICC_UCF_UCCE_UEC_TXB1 BSP_BBIT32(14)
#define QUICC_UCF_UCCE_UEC_TXB0 BSP_BBIT32(15)
#define QUICC_UCF_UCCE_UEC_RXB7 BSP_BBIT32(16)
#define QUICC_UCF_UCCE_UEC_GINTIW0 BSP_BBIT32(16)
#define QUICC_UCF_UCCE_UEC_RXB6 BSP_BBIT32(17)
#define QUICC_UCF_UCCE_UEC_GINTIW1 BSP_BBIT32(17)
#define QUICC_UCF_UCCE_UEC_RXB5 BSP_BBIT32(18)
#define QUICC_UCF_UCCE_UEC_PTPE BSP_BBIT32(18)
#define QUICC_UCF_UCCE_UEC_RXB4 BSP_BBIT32(19)
#define QUICC_UCF_UCCE_UEC_RXB3 BSP_BBIT32(20)
#define QUICC_UCF_UCCE_UEC_INTOIW0 BSP_BBIT32(20)
#define QUICC_UCF_UCCE_UEC_RXB2 BSP_BBIT32(21)
#define QUICC_UCF_UCCE_UEC_INTOIW1 BSP_BBIT32(21)
#define QUICC_UCF_UCCE_UEC_RXB1 BSP_BBIT32(22)
#define QUICC_UCF_UCCE_UEC_RXB0 BSP_BBIT32(23)
#define QUICC_UCF_UCCE_UEC_RXF7 BSP_BBIT32(24)
#define QUICC_UCF_UCCE_UEC_RXF6 BSP_BBIT32(25)
#define QUICC_UCF_UCCE_UEC_RXF5 BSP_BBIT32(26)
#define QUICC_UCF_UCCE_UEC_RXF4 BSP_BBIT32(27)
#define QUICC_UCF_UCCE_UEC_RXF3 BSP_BBIT32(28)
#define QUICC_UCF_UCCE_UEC_RXF2 BSP_BBIT32(29)
#define QUICC_UCF_UCCE_UEC_RXF1 BSP_BBIT32(30)
#define QUICC_UCF_UCCE_UEC_RXF0 BSP_BBIT32(31)
	uint32_t uccm;
	uint32_t uccs;
	uint32_t reserved_1c;
	uint32_t urfb;
#define QUICC_UCF_URFB_ADDR(val) BSP_BFLD32(val, 8, 31)
#define QUICC_UCF_URFB_ADDR_GET(reg) BSP_BFLD32GET(reg, 8, 31)
#define QUICC_UCF_URFB_ADDR_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 31)
	uint32_t urfs;
#define QUICC_UCF_URFS_RFS(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UCF_URFS_RFS_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UCF_URFS_RFS_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
	uint32_t urfet_urfset;
#define QUICC_UCF_URFET_URFSET_RFET(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UCF_URFET_URFSET_RFET_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UCF_URFET_URFSET_RFET_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
#define QUICC_UCF_URFET_URFSET_RSFET(val) BSP_BFLD32(val, 16, 31)
#define QUICC_UCF_URFET_URFSET_RSFET_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_UCF_URFET_URFSET_RSFET_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t utfb;
#define QUICC_UCF_UTFB_ADDR(val) BSP_BFLD32(val, 8, 31)
#define QUICC_UCF_UTFB_ADDR_GET(reg) BSP_BFLD32GET(reg, 8, 31)
#define QUICC_UCF_UTFB_ADDR_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 31)
	uint32_t utfs;
#define QUICC_UCF_UTFS_TFS(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UCF_UTFS_TFS_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UCF_UTFS_TFS_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
	uint32_t utfet;
#define QUICC_UCF_UTFET_TFET(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UCF_UTFET_TFET_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UCF_UTFET_TFET_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
	uint32_t utftt;
#define QUICC_UCF_UTFTT_TFTT(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UCF_UTFTT_TFTT_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UCF_UTFTT_TFTT_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
	uint32_t utpt;
#define QUICC_UCF_UTPT_MCNT(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UCF_UTPT_MCNT_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UCF_UTPT_MCNT_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
	uint32_t urtry;
#define QUICC_UCF_URTRY_CNT(val) BSP_BFLD32(val, 0, 31)
#define QUICC_UCF_URTRY_CNT_GET(reg) BSP_BFLD32GET(reg, 0, 31)
#define QUICC_UCF_URTRY_CNT_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 31)
	uint32_t reserved_44 [19];
	uint32_t guemr;
#define QUICC_UCF_GUEMR_MODE(val) BSP_BFLD32(val, 0, 7)
#define QUICC_UCF_GUEMR_MODE_GET(reg) BSP_BFLD32GET(reg, 0, 7)
#define QUICC_UCF_GUEMR_MODE_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 7)
	uint32_t reserved_94 [27];
	uint32_t maccfg1;
#define QUICC_UCF_MACCFG1_RX_FLOW BSP_BBIT32(26)
#define QUICC_UCF_MACCFG1_TX_FLOW BSP_BBIT32(27)
#define QUICC_UCF_MACCFG1_SYNCD_RX_EN BSP_BBIT32(28)
#define QUICC_UCF_MACCFG1_RX_EN BSP_BBIT32(29)
#define QUICC_UCF_MACCFG1_SYNCD_TX_EN BSP_BBIT32(30)
#define QUICC_UCF_MACCFG1_TX_EN BSP_BBIT32(31)
	uint32_t maccfg2;
#define QUICC_UCF_MACCFG2_PREL(val) BSP_BFLD32(val, 16, 19)
#define QUICC_UCF_MACCFG2_PREL_GET(reg) BSP_BFLD32GET(reg, 16, 19)
#define QUICC_UCF_MACCFG2_PREL_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 19)
#define QUICC_UCF_MACCFG2_IFM(val) BSP_BFLD32(val, 22, 23)
#define QUICC_UCF_MACCFG2_IFM_GET(reg) BSP_BFLD32GET(reg, 22, 23)
#define QUICC_UCF_MACCFG2_IFM_SET(reg, val) BSP_BFLD32SET(reg, val, 22, 23)
#define QUICC_UCF_MACCFG2_SRP BSP_BBIT32(24)
#define QUICC_UCF_MACCFG2_STP BSP_BBIT32(25)
#define QUICC_UCF_MACCFG2_MUST_BE_ONE BSP_BBIT32(26)
#define QUICC_UCF_MACCFG2_LC BSP_BBIT32(27)
#define QUICC_UCF_MACCFG2_MPE BSP_BBIT32(28)
#define QUICC_UCF_MACCFG2_PAD_CRC BSP_BBIT32(29)
#define QUICC_UCF_MACCFG2_CRE BSP_BBIT32(30)
#define QUICC_UCF_MACCFG2_FDX BSP_BBIT32(31)
	uint32_t ipgifg;
	uint32_t hafdup;
	uint32_t reserved_110 [4];
	uint32_t miimcfg;
#define QUICC_UCF_MIIMCFG_RESET BSP_BBIT32(0)
#define QUICC_UCF_MIIMCFG_NO_PRE BSP_BBIT32(27)
#define QUICC_UCF_MIIMCFG_CLOCK_SELECT(val) BSP_BFLD32(val, 29, 31)
#define QUICC_UCF_MIIMCFG_CLOCK_SELECT_GET(reg) BSP_BFLD32GET(reg, 29, 31)
#define QUICC_UCF_MIIMCFG_CLOCK_SELECT_SET(reg, val) BSP_BFLD32SET(reg, val, 29, 31)
	uint32_t miimcom;
#define QUICC_UCF_MIIMCOM_SCAN_CYCLE BSP_BBIT32(30)
#define QUICC_UCF_MIIMCOM_READ_CYCLE BSP_BBIT32(31)
	uint32_t miimadd;
#define QUICC_UCF_MIIMADD_PHY_ADDR(val) BSP_BFLD32(val, 19, 23)
#define QUICC_UCF_MIIMADD_PHY_ADDR_GET(reg) BSP_BFLD32GET(reg, 19, 23)
#define QUICC_UCF_MIIMADD_PHY_ADDR_SET(reg, val) BSP_BFLD32SET(reg, val, 19, 23)
#define QUICC_UCF_MIIMADD_REG_ADDR(val) BSP_BFLD32(val, 27, 31)
#define QUICC_UCF_MIIMADD_REG_ADDR_GET(reg) BSP_BFLD32GET(reg, 27, 31)
#define QUICC_UCF_MIIMADD_REG_ADDR_SET(reg, val) BSP_BFLD32SET(reg, val, 27, 31)
	uint32_t miimcon;
#define QUICC_UCF_MIIMCON_DATA(val) BSP_BFLD32(val, 16, 31)
#define QUICC_UCF_MIIMCON_DATA_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_UCF_MIIMCON_DATA_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t miimstat;
#define QUICC_UCF_MIIMSTAT_DATA(val) BSP_BFLD32(val, 16, 31)
#define QUICC_UCF_MIIMSTAT_DATA_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_UCF_MIIMSTAT_DATA_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t miimind;
#define QUICC_UCF_MIIMIND_INVALID BSP_BBIT32(29)
#define QUICC_UCF_MIIMIND_SCAN BSP_BBIT32(30)
#define QUICC_UCF_MIIMIND_BUSY BSP_BBIT32(31)
	uint32_t ifctl;
	uint32_t ifstat;
	uint32_t macstnaddr1;
	uint32_t macstnaddr2;
	uint32_t reserved_148 [2];
	uint32_t uempr;
	uint32_t utbipar;
	uint32_t uescr;
#define QUICC_UCF_UESCR_AUTOZ BSP_BBIT32(0)
#define QUICC_UCF_UESCR_CLRCNT BSP_BBIT32(1)
#define QUICC_UCF_UESCR_MAXCOV(val) BSP_BFLD32(val, 2, 7)
#define QUICC_UCF_UESCR_MAXCOV_GET(reg) BSP_BFLD32GET(reg, 2, 7)
#define QUICC_UCF_UESCR_MAXCOV_SET(reg, val) BSP_BFLD32SET(reg, val, 2, 7)
#define QUICC_UCF_UESCR_SCOV(val) BSP_BFLD32(val, 8, 15)
#define QUICC_UCF_UESCR_SCOV_GET(reg) BSP_BFLD32GET(reg, 8, 15)
#define QUICC_UCF_UESCR_SCOV_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 15)
	uint32_t reserved_15c [9];
	uint32_t tx64;
	uint32_t tx127;
	uint32_t tx255;
	uint32_t rx64;
	uint32_t rx127;
	uint32_t rx255;
	uint32_t txok;
	uint32_t txcf;
	uint32_t tmca;
	uint32_t tbca;
	uint32_t rxfok;
	uint32_t rxbok;
	uint32_t rbyt;
	uint32_t rmca;
	uint32_t rbca;
	uint32_t scar;
	uint32_t scam;
	uint32_t rxdiscov;
} quicc_ucf;

typedef union {
	quicc_ucs slow;
	quicc_ucf fast;
} quicc_ucc;

#define QUICC_UCC_1 (*(volatile quicc_ucc *) (QUICC_BASE + 0x2000))
#define QUICC_UCC_2 (*(volatile quicc_ucc *) (QUICC_BASE + 0x3000))
#define QUICC_UCC_3 (*(volatile quicc_ucc *) (QUICC_BASE + 0x2200))
#define QUICC_UCC_4 (*(volatile quicc_ucc *) (QUICC_BASE + 0x3200))
#define QUICC_UCC_5 (*(volatile quicc_ucc *) (QUICC_BASE + 0x2400))
#define QUICC_UCC_6 (*(volatile quicc_ucc *) (QUICC_BASE + 0x3400))
#define QUICC_UCC_7 (*(volatile quicc_ucc *) (QUICC_BASE + 0x2600))
#define QUICC_UCC_8 (*(volatile quicc_ucc *) (QUICC_BASE + 0x3600))

typedef struct {
	uint32_t remoder_btmoder;
#define QUICC_UEC_RX_GPARAM_REMODER_EXF BSP_BBIT32(0)
#define QUICC_UEC_RX_GPARAM_REMODER_RMSRP BSP_BBIT32(2)
#define QUICC_UEC_RX_GPARAM_REMODER_IWEN BSP_BBIT32(3)
#define QUICC_UEC_RX_GPARAM_REMODER_V_TAG_OP(val) BSP_BFLD32(val, 6, 9)
#define QUICC_UEC_RX_GPARAM_REMODER_V_TAG_OP_GET(reg) BSP_BFLD32GET(reg, 6, 9)
#define QUICC_UEC_RX_GPARAM_REMODER_V_TAG_OP_SET(reg, val) BSP_BFLD32SET(reg, val, 6, 9)
#define QUICC_UEC_RX_GPARAM_REMODER_V_NON_TAG_OP BSP_BBIT32(10)
#define QUICC_UEC_RX_GPARAM_REMODER_RQOS(val) BSP_BFLD32(val, 14, 15)
#define QUICC_UEC_RX_GPARAM_REMODER_RQOS_GET(reg) BSP_BFLD32GET(reg, 14, 15)
#define QUICC_UEC_RX_GPARAM_REMODER_RQOS_SET(reg, val) BSP_BFLD32SET(reg, val, 14, 15)
#define QUICC_UEC_RX_GPARAM_REMODER_LOSS_LESS_FC_EN BSP_BBIT32(17)
#define QUICC_UEC_RX_GPARAM_REMODER_EFM3 BSP_BBIT32(18)
#define QUICC_UEC_RX_GPARAM_REMODER_RFSE BSP_BBIT32(19)
#define QUICC_UEC_RX_GPARAM_REMODER_EXP BSP_BBIT32(20)
#define QUICC_UEC_RX_GPARAM_REMODER_NUM_OF_QUEUES(val) BSP_BFLD32(val, 21, 23)
#define QUICC_UEC_RX_GPARAM_REMODER_NUM_OF_QUEUES_GET(reg) BSP_BFLD32GET(reg, 21, 23)
#define QUICC_UEC_RX_GPARAM_REMODER_NUM_OF_QUEUES_SET(reg, val) BSP_BFLD32SET(reg, val, 21, 23)
#define QUICC_UEC_RX_GPARAM_REMODER_VEDE BSP_BBIT32(25)
#define QUICC_UEC_RX_GPARAM_REMODER_VFSEN BSP_BBIT32(26)
#define QUICC_UEC_RX_GPARAM_REMODER_DXE BSP_BBIT32(28)
#define QUICC_UEC_RX_GPARAM_REMODER_DNE BSP_BBIT32(29)
#define QUICC_UEC_RX_GPARAM_REMODER_IPCHK BSP_BBIT32(30)
#define QUICC_UEC_RX_GPARAM_REMODER_IPAE BSP_BBIT32(31)
#define QUICC_UEC_RX_GPARAM_BTMODER_RMSRP BSP_BBIT32(2)
#define QUICC_UEC_RX_GPARAM_BTMODER_VPTE BSP_BBIT32(4)
#define QUICC_UEC_RX_GPARAM_BTMODER_NUM_OF_VP_QUEUES(val) BSP_BFLD32(val, 5, 7)
#define QUICC_UEC_RX_GPARAM_BTMODER_NUM_OF_VP_QUEUES_GET(reg) BSP_BFLD32GET(reg, 5, 7)
#define QUICC_UEC_RX_GPARAM_BTMODER_NUM_OF_VP_QUEUES_SET(reg, val) BSP_BFLD32SET(reg, val, 5, 7)
#define QUICC_UEC_RX_GPARAM_BTMODER_RQOS(val) BSP_BFLD32(val, 8, 15)
#define QUICC_UEC_RX_GPARAM_BTMODER_RQOS_GET(reg) BSP_BFLD32GET(reg, 8, 15)
#define QUICC_UEC_RX_GPARAM_BTMODER_RQOS_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 15)
#define QUICC_UEC_RX_GPARAM_BTMODER_LOSS_LESS_FC_EN BSP_BBIT32(17)
#define QUICC_UEC_RX_GPARAM_BTMODER_RFSE BSP_BBIT32(19)
#define QUICC_UEC_RX_GPARAM_BTMODER_FIE BSP_BBIT32(20)
#define QUICC_UEC_RX_GPARAM_BTMODER_NUM_OF_QUEUES(val) BSP_BFLD32(val, 21, 23)
#define QUICC_UEC_RX_GPARAM_BTMODER_NUM_OF_QUEUES_GET(reg) BSP_BFLD32GET(reg, 21, 23)
#define QUICC_UEC_RX_GPARAM_BTMODER_NUM_OF_QUEUES_SET(reg, val) BSP_BFLD32SET(reg, val, 21, 23)
#define QUICC_UEC_RX_GPARAM_BTMODER_BTE BSP_BBIT32(24)
#define QUICC_UEC_RX_GPARAM_BTMODER_VEDE BSP_BBIT32(25)
#define QUICC_UEC_RX_GPARAM_BTMODER_VFSEN BSP_BBIT32(26)
#define QUICC_UEC_RX_GPARAM_BTMODER_IPAE BSP_BBIT32(31)
	uint32_t rqptr;
	uint32_t reserved_08 [6];
	uint32_t typeorlen_rxgstpack;
#define QUICC_UEC_RX_GPARAM_TYPE_OR_LEN(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UEC_RX_GPARAM_TYPE_OR_LEN_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UEC_RX_GPARAM_TYPE_OR_LEN_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
#define QUICC_UEC_RX_GPARAM_RXGSTPACK BSP_BBIT32(31)
	uint32_t reserved_24 [3];
	uint32_t intcoalescingptr;
	uint32_t busyvector_rstate;
#define QUICC_UEC_RX_GPARAM_RSTATE_BMR_MD BSP_BBIT32(16)
#define QUICC_UEC_RX_GPARAM_RSTATE_BMR_GBL BSP_BBIT32(18)
#define QUICC_UEC_RX_GPARAM_RSTATE_BMR_BO(val) BSP_BFLD32(val, 19, 20)
#define QUICC_UEC_RX_GPARAM_RSTATE_BMR_BO_GET(reg) BSP_BFLD32GET(reg, 19, 20)
#define QUICC_UEC_RX_GPARAM_RSTATE_BMR_BO_SET(reg, val) BSP_BFLD32SET(reg, val, 19, 20)
#define QUICC_UEC_RX_GPARAM_RSTATE_BMR_CETM BSP_BBIT32(21)
#define QUICC_UEC_RX_GPARAM_RSTATE_BMR_DTB BSP_BBIT32(22)
#define QUICC_UEC_RX_GPARAM_RSTATE_BMR_BDB BSP_BBIT32(23)
	uint32_t vedpm_vpgpage;
#define QUICC_UEC_RX_GPARAM_VEDPM_VPGPAGE_VEDPM(val) BSP_BFLD32(val, 0, 7)
#define QUICC_UEC_RX_GPARAM_VEDPM_VPGPAGE_VEDPM_GET(reg) BSP_BFLD32GET(reg, 0, 7)
#define QUICC_UEC_RX_GPARAM_VEDPM_VPGPAGE_VEDPM_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 7)
#define QUICC_UEC_RX_GPARAM_VEDPM_VPGPAGE_VP_G_PAGE(val) BSP_BFLD32(val, 8, 31)
#define QUICC_UEC_RX_GPARAM_VEDPM_VPGPAGE_VP_G_PAGE_GET(reg) BSP_BFLD32GET(reg, 8, 31)
#define QUICC_UEC_RX_GPARAM_VEDPM_VPGPAGE_VP_G_PAGE_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 31)
	uint32_t reserved_3c [2];
	uint32_t ovskip_mrblr;
#define QUICC_UEC_RX_GPARAM_OV_SKIP_FRAME(val) BSP_BFLD32(val, 0, 7)
#define QUICC_UEC_RX_GPARAM_OV_SKIP_FRAME_GET(reg) BSP_BFLD32GET(reg, 0, 7)
#define QUICC_UEC_RX_GPARAM_OV_SKIP_FRAME_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 7)
#define QUICC_UEC_RX_GPARAM_OV_SKIP_FRAME_CNT(val) BSP_BFLD32(val, 8, 15)
#define QUICC_UEC_RX_GPARAM_OV_SKIP_FRAME_CNT_GET(reg) BSP_BFLD32GET(reg, 8, 15)
#define QUICC_UEC_RX_GPARAM_OV_SKIP_FRAME_CNT_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 15)
#define QUICC_UEC_RX_GPARAM_MRBLR(val) BSP_BFLD32(val, 16, 31)
#define QUICC_UEC_RX_GPARAM_MRBLR_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_UEC_RX_GPARAM_MRBLR_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t rdbqptr;
	uint32_t mflr_minflr;
#define QUICC_UEC_RX_GPARAM_MFLR(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UEC_RX_GPARAM_MFLR_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UEC_RX_GPARAM_MFLR_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
#define QUICC_UEC_RX_GPARAM_MINFLR(val) BSP_BFLD32(val, 16, 31)
#define QUICC_UEC_RX_GPARAM_MINFLR_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_UEC_RX_GPARAM_MINFLR_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t maxd1_maxd2;
#define QUICC_UEC_RX_GPARAM_MAXD1(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UEC_RX_GPARAM_MAXD1_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UEC_RX_GPARAM_MAXD1_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
#define QUICC_UEC_RX_GPARAM_MAXD2(val) BSP_BFLD32(val, 16, 31)
#define QUICC_UEC_RX_GPARAM_MAXD2_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_UEC_RX_GPARAM_MAXD2_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t reserved_54;
	uint32_t l2qt;
	uint32_t l3qt;
	uint32_t reserved_60 [7];
	uint32_t vlantype_tci;
#define QUICC_UEC_RX_GPARAM_VLAN_TYPE(val) BSP_BFLD32(val, 0, 15)
#define QUICC_UEC_RX_GPARAM_VLAN_TYPE_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_UEC_RX_GPARAM_VLAN_TYPE_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
#define QUICC_UEC_RX_GPARAM_TCI(val) BSP_BFLD32(val, 16, 31)
#define QUICC_UEC_RX_GPARAM_TCI_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_UEC_RX_GPARAM_TCI_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t af_iaddr_h;
	uint32_t af_iaddr_l;
	uint32_t af_gaddr_h;
	uint32_t af_gaddr_l;
	uint32_t af_taddr_h;
	uint32_t af_taddr_m_l;
	uint32_t af_paddr1_h;
	uint32_t af_paddr1_m_l;
	uint32_t af_paddr2_h;
	uint32_t af_paddr2_m_l;
	uint32_t af_paddr3_h;
	uint32_t af_paddr3_m_l;
	uint32_t af_paddr4_h;
	uint32_t af_paddr4_m_l;
	uint32_t af_tci2_type;
#define QUICC_UEC_RX_GPARAM_AF_TCI2_TYPE(val) BSP_BFLD32(val, 16, 31)
#define QUICC_UEC_RX_GPARAM_AF_TCI2_TYPE_GET(reg) BSP_BFLD32GET(reg, 16, 31)
#define QUICC_UEC_RX_GPARAM_AF_TCI2_TYPE_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 31)
	uint32_t reserved_bc;
	uint32_t expglobalparam;
	uint32_t losslessfcptr;
	uint32_t reserved_c8 [10];
	uint32_t iwgpb_vpqmt;
	uint32_t iwtpb;
	uint32_t ts;
#define QUICC_UEC_RX_GPARAM_TS_TS(val) BSP_BFLD32(val, 15, 31)
#define QUICC_UEC_RX_GPARAM_TS_TS_GET(reg) BSP_BFLD32GET(reg, 15, 31)
#define QUICC_UEC_RX_GPARAM_TS_TS_SET(reg, val) BSP_BFLD32SET(reg, val, 15, 31)
	uint32_t reserved_fc;
} quicc_uec_rx_gparam;

typedef struct {
	uint32_t reserved_00 [10];
} quicc_uec_rx_tds;

typedef struct {
	uint32_t bdbptr;
	uint32_t bdptr;
	uint32_t ebbdptr;
	uint32_t ebdptr;
} quicc_uec_rx_bd_queue;

typedef struct {
	quicc_bd bds [4];
} quicc_uec_rx_bd_prefetch;

typedef struct {
	uint32_t reserved_00 [32];
} quicc_uec_rx_tparam;

typedef struct {
	uint32_t temorder;
#define QUICC_UEC_TX_GPARAM_TEMORDER_START_OF_FRAME BSP_BBIT32(0)
#define QUICC_UEC_TX_GPARAM_TEMORDER_START_OF_BD BSP_BBIT32(1)
#define QUICC_UEC_TX_GPARAM_TEMORDER_SCHED_EN BSP_BBIT32(2)
#define QUICC_UEC_TX_GPARAM_TEMORDER_PREF_AND_CONT_FLAG BSP_BBIT32(3)
#define QUICC_UEC_TX_GPARAM_TEMORDER_IPCHK BSP_BBIT32(5)
#define QUICC_UEC_TX_GPARAM_TEMORDER_HDX BSP_BBIT32(6)
#define QUICC_UEC_TX_GPARAM_TEMORDER_RMONEN BSP_BBIT32(7)
#define QUICC_UEC_TX_GPARAM_TEMORDER_IN_TXIP_FRAG_EN BSP_BBIT32(8)
#define QUICC_UEC_TX_GPARAM_TEMORDER_H_SCHED_EN BSP_BBIT32(9)
#define QUICC_UEC_TX_GPARAM_TEMORDER_NUM_OF_QUEUES(val) BSP_BFLD32(val, 13, 15)
#define QUICC_UEC_TX_GPARAM_TEMORDER_NUM_OF_QUEUES_GET(reg) BSP_BFLD32GET(reg, 13, 15)
#define QUICC_UEC_TX_GPARAM_TEMORDER_NUM_OF_QUEUES_SET(reg, val) BSP_BFLD32SET(reg, val, 13, 15)
	uint32_t reserved_04 [13];
	uint32_t sqptr;
	uint32_t schedbaseptr;
	uint32_t rmon;
#define QUICC_UEC_TX_GPARAM_RMON_RMON_PERQ_EN BSP_BBIT32(0)
#define QUICC_UEC_TX_GPARAM_RMON_TX_RMON_BASE_PTR(val) BSP_BFLD32(val, 8, 31)
#define QUICC_UEC_TX_GPARAM_RMON_TX_RMON_BASE_PTR_GET(reg) BSP_BFLD32GET(reg, 8, 31)
#define QUICC_UEC_TX_GPARAM_RMON_TX_RMON_BASE_PTR_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 31)
	uint32_t tstate;
#define QUICC_UEC_TX_GPARAM_TSTATE_BMR_MD BSP_BBIT32(0)
#define QUICC_UEC_TX_GPARAM_TSTATE_BMR_GBL BSP_BBIT32(2)
#define QUICC_UEC_TX_GPARAM_TSTATE_BMR_BO(val) BSP_BFLD32(val, 3, 4)
#define QUICC_UEC_TX_GPARAM_TSTATE_BMR_BO_GET(reg) BSP_BFLD32GET(reg, 3, 4)
#define QUICC_UEC_TX_GPARAM_TSTATE_BMR_BO_SET(reg, val) BSP_BFLD32SET(reg, val, 3, 4)
#define QUICC_UEC_TX_GPARAM_TSTATE_BMR_CETM BSP_BBIT32(5)
#define QUICC_UEC_TX_GPARAM_TSTATE_BMR_DTB BSP_BBIT32(6)
#define QUICC_UEC_TX_GPARAM_TSTATE_BMR_BDB BSP_BBIT32(7)
	uint32_t iphoffsets [2];
	uint32_t vtag [8];
	uint32_t tqptr;
	uint32_t reserved_74;
	uint32_t snumsen [2];
	uint32_t dupiden_l2l3baseptr;
#define QUICC_UEC_TX_GPARAM_DUPIDEN_L2L3BASEPTR_DUPID_EN BSP_BBIT32(7)
#define QUICC_UEC_TX_GPARAM_DUPIDEN_L2L3BASEPTR_L2L3BASEPTR(val) BSP_BFLD32(val, 8, 31)
#define QUICC_UEC_TX_GPARAM_DUPIDEN_L2L3BASEPTR_L2L3BASEPTR_GET(reg) BSP_BFLD32GET(reg, 8, 31)
#define QUICC_UEC_TX_GPARAM_DUPIDEN_L2L3BASEPTR_L2L3BASEPTR_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 31)
	uint32_t mtu [4];
	uint32_t reserved_94 [5];
	uint32_t wrrtablebase;
#define QUICC_UEC_TX_GPARAM_WRRTABLEBASE_WRR_TABLE_BASE(val) BSP_BFLD32(val, 8, 31)
#define QUICC_UEC_TX_GPARAM_WRRTABLEBASE_WRR_TABLE_BASE_GET(reg) BSP_BFLD32GET(reg, 8, 31)
#define QUICC_UEC_TX_GPARAM_WRRTABLEBASE_WRR_TABLE_BASE_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 31)
	uint32_t reserved_ac [5];
} quicc_uec_tx_gparam;

typedef struct {
	uint32_t bd_ring_base;
	uint32_t reserved_04 [2];
	uint32_t last_bd_completed_addr;
	uint32_t ewf_aqs;
#define QUICC_UEC_TX_SQQD_EWF_AQS_EXPONENTIAL_WEIGHT_FACTOR(val) BSP_BFLD32(val, 0, 7)
#define QUICC_UEC_TX_SQQD_EWF_AQS_EXPONENTIAL_WEIGHT_FACTOR_GET(reg) BSP_BFLD32GET(reg, 0, 7)
#define QUICC_UEC_TX_SQQD_EWF_AQS_EXPONENTIAL_WEIGHT_FACTOR_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 7)
#define QUICC_UEC_TX_SQQD_EWF_AQS_AVE_QUEUE_SIZE(val) BSP_BFLD32(val, 8, 31)
#define QUICC_UEC_TX_SQQD_EWF_AQS_AVE_QUEUE_SIZE_GET(reg) BSP_BFLD32GET(reg, 8, 31)
#define QUICC_UEC_TX_SQQD_EWF_AQS_AVE_QUEUE_SIZE_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 31)
	uint32_t reserved_14 [11];
} quicc_uec_tx_sqqd;

typedef struct {
	uint32_t reserved_00 [34];
} quicc_uec_tx_tds;

typedef struct {
	uint32_t reserved_00 [16];
} quicc_uec_tx_tparam;

typedef struct {
	uint32_t reserved_00;
	uint32_t hcen_llks;
#define QUICC_UEC_RX_TX_PARAM_HC_EN BSP_BBIT32(23)
#define QUICC_UEC_RX_TX_PARAM_LARGEST_LOOKUP_KEY_SIZE(val) BSP_BFLD32(val, 24, 31)
#define QUICC_UEC_RX_TX_PARAM_LARGEST_LOOKUP_KEY_SIZE_GET(reg) BSP_BFLD32GET(reg, 24, 31)
#define QUICC_UEC_RX_TX_PARAM_LARGEST_LOOKUP_KEY_SIZE_SET(reg, val) BSP_BFLD32SET(reg, val, 24, 31)
	uint32_t rgf_tgf_rxgparmpage_riscalloc;
#define QUICC_UEC_RX_TX_PARAM_RGF(val) BSP_BFLD32(val, 0, 3)
#define QUICC_UEC_RX_TX_PARAM_RGF_GET(reg) BSP_BFLD32GET(reg, 0, 3)
#define QUICC_UEC_RX_TX_PARAM_RGF_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 3)
#define QUICC_UEC_RX_TX_PARAM_TGF(val) BSP_BFLD32(val, 4, 7)
#define QUICC_UEC_RX_TX_PARAM_TGF_GET(reg) BSP_BFLD32GET(reg, 4, 7)
#define QUICC_UEC_RX_TX_PARAM_TGF_SET(reg, val) BSP_BFLD32SET(reg, val, 4, 7)
#define QUICC_UEC_RX_TX_PARAM_SNUM(val) BSP_BFLD32(val, 0, 7)
#define QUICC_UEC_RX_TX_PARAM_SNUM_GET(reg) BSP_BFLD32GET(reg, 0, 7)
#define QUICC_UEC_RX_TX_PARAM_SNUM_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 7)
#define QUICC_UEC_RX_TX_PARAM_PRAM_PAGE(val) BSP_BFLD32(val, 8, 25)
#define QUICC_UEC_RX_TX_PARAM_PRAM_PAGE_GET(reg) BSP_BFLD32GET(reg, 8, 25)
#define QUICC_UEC_RX_TX_PARAM_PRAM_PAGE_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 25)
#define QUICC_UEC_RX_TX_PARAM_RISC_ALLOC(val) BSP_BFLD32(val, 28, 31)
#define QUICC_UEC_RX_TX_PARAM_RISC_ALLOC_GET(reg) BSP_BFLD32GET(reg, 28, 31)
#define QUICC_UEC_RX_TX_PARAM_RISC_ALLOC_SET(reg, val) BSP_BFLD32SET(reg, val, 28, 31)
	uint32_t rxgsnum_rxvfifoblksz_riscalloc;
#define QUICC_UEC_RX_TX_PARAM_RX_VFIFO_BLK_SZ(val) BSP_BFLD32(val, 8, 15)
#define QUICC_UEC_RX_TX_PARAM_RX_VFIFO_BLK_SZ_GET(reg) BSP_BFLD32GET(reg, 8, 15)
#define QUICC_UEC_RX_TX_PARAM_RX_VFIFO_BLK_SZ_SET(reg, val) BSP_BFLD32SET(reg, val, 8, 15)
	uint32_t rxthread [8];
	uint32_t reserved_30 [2];
	uint32_t txgprampage;
	uint32_t txthread [8];
	uint32_t preftxbdcount;
} quicc_uec_rx_tx_param;

typedef struct {
} quicc_miigsk;

#define QUICC_MIIGSK_1 (*(volatile quicc_miigsk *) (QUICC_BASE + 0x2800))
#define QUICC_MIIGSK_2 (*(volatile quicc_miigsk *) (QUICC_BASE + 0x2a00))

typedef struct {
} quicc_upc;

#define QUICC_UPC_1 (*(volatile quicc_upc *) (QUICC_BASE + 0x2e00))
#define QUICC_UPC_2 (*(volatile quicc_upc *) (QUICC_BASE + 0x3e00))

typedef struct {
	uint32_t sdsr;
#define QUICC_SDMA_SDSR_BER_1 BSP_BBIT32(6)
#define QUICC_SDMA_SDSR_BER_2 BSP_BBIT32(7)
	uint32_t sdmr;
#define QUICC_SDMA_SDMR_GLB_1_MSK BSP_BBIT32(0)
#define QUICC_SDMA_SDMR_ADR_SEL BSP_BBIT32(2)
#define QUICC_SDMA_SDMR_BER_1_MSK BSP_BBIT32(6)
#define QUICC_SDMA_SDMR_BER_2_MSK BSP_BBIT32(7)
#define QUICC_SDMA_SDMR_EB1_MSK BSP_BBIT32(8)
#define QUICC_SDMA_SDMR_ER1_MSK BSP_BBIT32(12)
#define QUICC_SDMA_SDMR_ER2_MSK BSP_BBIT32(13)
#define QUICC_SDMA_SDMR_CEN(val) BSP_BFLD32(val, 16, 18)
#define QUICC_SDMA_SDMR_CEN_GET(reg) BSP_BFLD32GET(reg, 16, 18)
#define QUICC_SDMA_SDMR_CEN_SET(reg, val) BSP_BFLD32SET(reg, val, 16, 18)
#define QUICC_SDMA_SDMR_CAS BSP_BBIT32(20)
#define QUICC_SDMA_SDMR_SBER_1 BSP_BBIT32(22)
#define QUICC_SDMA_SDMR_SBER_2 BSP_BBIT32(23)
#define QUICC_SDMA_SDMR_EB1_PR(val) BSP_BFLD32(val, 24, 25)
#define QUICC_SDMA_SDMR_EB1_PR_GET(reg) BSP_BFLD32GET(reg, 24, 25)
#define QUICC_SDMA_SDMR_EB1_PR_SET(reg, val) BSP_BFLD32SET(reg, val, 24, 25)
#define QUICC_SDMA_SDMR_ER1_PR BSP_BBIT32(28)
#define QUICC_SDMA_SDMR_ER2_PR BSP_BBIT32(29)
#define QUICC_SDMA_SDTR_CQTH(val) BSP_BFLD32(val, 3, 7)
#define QUICC_SDMA_SDTR_CQTH_GET(reg) BSP_BFLD32GET(reg, 3, 7)
#define QUICC_SDMA_SDTR_CQTH_SET(reg, val) BSP_BFLD32SET(reg, val, 3, 7)
#define QUICC_SDMA_SDTR_RBTH(val) BSP_BFLD32(val, 10, 15)
#define QUICC_SDMA_SDTR_RBTH_GET(reg) BSP_BFLD32GET(reg, 10, 15)
#define QUICC_SDMA_SDTR_RBTH_SET(reg, val) BSP_BFLD32SET(reg, val, 10, 15)
#define QUICC_SDMA_SDTR_WBTH(val) BSP_BFLD32(val, 26, 31)
#define QUICC_SDMA_SDTR_WBTH_GET(reg) BSP_BFLD32GET(reg, 26, 31)
#define QUICC_SDMA_SDTR_WBTH_SET(reg, val) BSP_BFLD32SET(reg, val, 26, 31)
	uint32_t sdtr1;
	uint32_t sdtr2;
#define QUICC_SDMA_SDHY_CQHY(val) BSP_BFLD32(val, 3, 7)
#define QUICC_SDMA_SDHY_CQHY_GET(reg) BSP_BFLD32GET(reg, 3, 7)
#define QUICC_SDMA_SDHY_CQHY_SET(reg, val) BSP_BFLD32SET(reg, val, 3, 7)
#define QUICC_SDMA_SDHY_RBHY(val) BSP_BFLD32(val, 10, 15)
#define QUICC_SDMA_SDHY_RBHY_GET(reg) BSP_BFLD32GET(reg, 10, 15)
#define QUICC_SDMA_SDHY_RBHY_SET(reg, val) BSP_BFLD32SET(reg, val, 10, 15)
#define QUICC_SDMA_SDHY_WBHY(val) BSP_BFLD32(val, 26, 31)
#define QUICC_SDMA_SDHY_WBHY_GET(reg) BSP_BFLD32GET(reg, 26, 31)
#define QUICC_SDMA_SDHY_WBHY_SET(reg, val) BSP_BFLD32SET(reg, val, 26, 31)
	uint32_t sdhy1;
	uint32_t sdhy2;
	uint32_t sdta1;
	uint32_t sdta2;
#define QUICC_SDMA_SDTM_MSNUM(val) BSP_BFLD32(val, 0, 7)
#define QUICC_SDMA_SDTM_MSNUM_GET(reg) BSP_BFLD32GET(reg, 0, 7)
#define QUICC_SDMA_SDTM_MSNUM_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 7)
	uint32_t sdtm1;
	uint32_t sdtm2;
	uint32_t reserved_28 [4];
	uint32_t sdaqr;
#define QUICC_SDMA_SDAQR_AQ(val) BSP_BFLD32(val, 0, 15)
#define QUICC_SDMA_SDAQR_AQ_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_SDMA_SDAQR_AQ_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
#define QUICC_SDMA_SDAQR_BS BSP_BBIT32(31)
	uint32_t sdaqmr;
#define QUICC_SDMA_SDAQMR_AM(val) BSP_BFLD32(val, 0, 15)
#define QUICC_SDMA_SDAQMR_AM_GET(reg) BSP_BFLD32GET(reg, 0, 15)
#define QUICC_SDMA_SDAQMR_AM_SET(reg, val) BSP_BFLD32SET(reg, val, 0, 15)
	uint32_t reserved_40;
	uint32_t sdebcr;
#define QUICC_SDMA_SDEBCR_BA(val) BSP_BFLD32(val, 7, 31)
#define QUICC_SDMA_SDEBCR_BA_GET(reg) BSP_BFLD32GET(reg, 7, 31)
#define QUICC_SDMA_SDEBCR_BA_SET(reg, val) BSP_BFLD32SET(reg, val, 7, 31)
} quicc_sdma;

#define QUICC_SDMA (*(volatile quicc_sdma *) (QUICC_BASE + 0x4000))

typedef struct {
	uint32_t data [1];
} quicc_muram;

#define QUICC_MURAM (*(volatile quicc_muram *) (QUICC_BASE + 0x10000))

typedef struct {
	quicc_iram iram;
	uint32_t reserved_10 [28];
	quicc_irq irq;
	uint32_t reserved_e4 [7];
	quicc_engine engine;
	uint32_t reserved_1c4 [143];
	quicc_cmx cmx;
	uint32_t reserved_434 [3];
	quicc_timers timers;
	uint32_t reserved_440 [32];
	quicc_spi spi_1;
	uint32_t reserved_4f8 [2];
	quicc_spi spi_2;
	uint32_t reserved_538 [2];
	quicc_mcc mcc_1;
	uint32_t reserved_540 [16];
	quicc_mcc mcc_2;
	uint32_t reserved_580 [48];
	quicc_brg brg;
	uint32_t reserved_680 [16];
	quicc_usb usb;
	uint32_t reserved_6c0 [16];
	quicc_si si_1;
	uint32_t reserved_700 [32];
	quicc_si si_2;
	uint32_t reserved_780 [544];
	quicc_sirt sirt_1;
	uint32_t reserved_1000 [512];
	quicc_sirt sirt_2;
	uint32_t reserved_1800 [512];
	quicc_ucc ucc_1;
	uint32_t reserved_21c8 [14];
	quicc_ucc ucc_3;
	uint32_t reserved_23c8 [14];
	quicc_ucc ucc_5;
	uint32_t reserved_25c8 [14];
	quicc_ucc ucc_7;
	uint32_t reserved_27c8 [14];
	quicc_miigsk miigsk_1;
	uint32_t reserved_2800 [128];
	quicc_miigsk miigsk_2;
	uint32_t reserved_2a00 [256];
	quicc_upc upc_1;
	uint32_t reserved_2e00 [128];
	quicc_ucc ucc_2;
	uint32_t reserved_31c8 [14];
	quicc_ucc ucc_4;
	uint32_t reserved_33c8 [14];
	quicc_ucc ucc_6;
	uint32_t reserved_35c8 [14];
	quicc_ucc ucc_8;
	uint32_t reserved_37c8 [398];
	quicc_upc upc_2;
	uint32_t reserved_3e00 [128];
	quicc_sdma sdma;
	uint32_t reserved_4048 [12270];
	quicc_muram muram;
} quicc;

#define QUICC (*(volatile quicc *) (QUICC_BASE))

#endif /* QUICC_REGS_H */
